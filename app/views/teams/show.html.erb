<div class="min-h-screen bg-gray-50 py-8">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <!-- 팀 정보 헤더 -->
    <div class="bg-white shadow-sm rounded-lg p-6 mb-6">
      <div class="flex justify-between items-start">
        <div>
          <h1 class="text-2xl font-bold text-gray-900"><%= @team.name %></h1>
          <p class="text-gray-600 mt-2">주장: <%= @team.captain.name %></p>
          <% if @team.description.present? %>
            <p class="text-gray-600 mt-1"><%= @team.description %></p>
          <% end %>
        </div>
        
        <% if @team.captain == current_user %>
          <div class="flex space-x-2">
            <%= link_to "팀 편집", edit_team_path(@team), 
                  class: "bg-gray-500 text-white px-4 py-2 rounded-md hover:bg-gray-600" %>
            <%= link_to "멤버 관리", "#", 
                  class: "bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600",
                  "data-action": "manage-members" %>
          </div>
        <% end %>
      </div>
      
      <div class="grid grid-cols-2 md:grid-cols-4 gap-4 mt-6">
        <div class="text-center">
          <div class="text-2xl font-bold text-gray-900"><%= @team.member_count %></div>
          <div class="text-sm text-gray-600">팀원</div>
        </div>
        <div class="text-center">
          <div class="text-2xl font-bold text-green-600"><%= @team.wins %></div>
          <div class="text-sm text-gray-600">승</div>
        </div>
        <div class="text-center">
          <div class="text-2xl font-bold text-red-600"><%= @team.losses %></div>
          <div class="text-sm text-gray-600">패</div>
        </div>
        <div class="text-center">
          <div class="text-2xl font-bold text-blue-600"><%= @team.tournaments_participated %></div>
          <div class="text-sm text-gray-600">대회 참가</div>
        </div>
      </div>
    </div>
    
    <!-- 팀 멤버 목록 -->
    <div class="bg-white shadow-sm rounded-lg p-6">
      <h2 class="text-lg font-semibold mb-4">팀 멤버</h2>
      
      <% if @team.captain == current_user %>
        <!-- 멤버 추가 섹션 -->
        <div class="mb-6 p-4 bg-gray-50 rounded-lg">
          <div class="flex items-center space-x-3">
            <input type="text" id="member-search" 
                   placeholder="이름, 닉네임 또는 이메일로 검색..." 
                   class="flex-1 px-3 py-2 border border-gray-300 rounded-md">
            <button id="search-btn" class="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600">
              검색
            </button>
          </div>
          <div id="search-results" class="mt-3 hidden"></div>
        </div>
      <% end %>
      
      <!-- 멤버 리스트 -->
      <div class="space-y-2">
        <% @members.each do |member| %>
          <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
            <div class="flex items-center space-x-3">
              <div>
                <div class="font-medium">
                  <%= member.user.name %>
                  <% if member.user.nickname.present? %>
                    <span class="text-gray-500">(<%= member.user.nickname %>)</span>
                  <% end %>
                </div>
                <div class="text-sm text-gray-600">
                  <%= member.role == 'captain' ? '주장' : member.role %>
                  <% if member.jersey_number.present? %>
                    | #<%= member.jersey_number %>
                  <% end %>
                  <% if member.user.positions&.any? %>
                    | <%= member.user.positions.join(', ') %>
                  <% end %>
                </div>
              </div>
            </div>
            
            <% if @team.captain == current_user && member.user != current_user %>
              <button class="text-red-600 hover:text-red-800 text-sm" 
                      data-member-id="<%= member.user.id %>"
                      data-action="remove-member">
                제거
              </button>
            <% end %>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const teamId = <%= @team.id %>;
  
  <% if @team.captain == current_user %>
  // 멤버 검색
  const searchInput = document.getElementById('member-search');
  const searchBtn = document.getElementById('search-btn');
  const searchResults = document.getElementById('search-results');
  
  searchBtn.addEventListener('click', function() {
    const query = searchInput.value.trim();
    if (query.length < 2) return;
    
    fetch(`/teams/${teamId}/search_users?q=${query}`)
      .then(response => response.json())
      .then(users => {
        if (users.length === 0) {
          searchResults.innerHTML = '<p class="text-gray-500">검색 결과가 없습니다.</p>';
        } else {
          searchResults.innerHTML = users.map(user => `
            <div class="flex items-center justify-between p-2 hover:bg-gray-100 rounded">
              <div>
                <span class="font-medium">${user.name}</span>
                ${user.nickname ? `<span class="text-gray-500">(${user.nickname})</span>` : ''}
                <div class="text-sm text-gray-600">${user.email}</div>
              </div>
              <button class="bg-blue-500 text-white px-3 py-1 rounded text-sm hover:bg-blue-600"
                      onclick="addMember(${user.id})">
                추가
              </button>
            </div>
          `).join('');
        }
        searchResults.classList.remove('hidden');
      });
  });
  
  // 멤버 추가
  window.addMember = function(userId) {
    fetch(`/teams/${teamId}/add_member`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
      },
      body: JSON.stringify({ user_id: userId })
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        location.reload();
      } else {
        alert(data.message);
      }
    });
  };
  
  // 멤버 제거
  document.querySelectorAll('[data-action="remove-member"]').forEach(btn => {
    btn.addEventListener('click', function() {
      if (!confirm('정말로 이 멤버를 제거하시겠습니까?')) return;
      
      const userId = this.dataset.memberId;
      
      fetch(`/teams/${teamId}/remove_member`, {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
        },
        body: JSON.stringify({ user_id: userId })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          location.reload();
        } else {
          alert(data.message);
        }
      });
    });
  });
  <% end %>
});
</script>