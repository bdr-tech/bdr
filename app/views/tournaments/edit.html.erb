<div class="container mx-auto px-4 py-8">
  <div class="max-w-3xl mx-auto">
    <h1 class="text-3xl font-bold mb-8">대회 수정하기</h1>
    
    <%= form_with model: @tournament, local: true, class: "space-y-6" do |f| %>
      <% if @tournament.errors.any? %>
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
          <strong class="font-bold">다음 오류가 발생했습니다:</strong>
          <ul class="mt-2 list-disc list-inside">
            <% @tournament.errors.full_messages.each do |message| %>
              <li><%= message %></li>
            <% end %>
          </ul>
        </div>
      <% end %>
      
      <!-- 기본 정보 -->
      <div class="bg-white shadow-md rounded-lg p-6">
        <h2 class="text-xl font-semibold mb-4">기본 정보</h2>
        
        <div class="mb-4">
          <%= f.label :name, "대회명", class: "block text-sm font-medium text-gray-700 mb-2" %>
          <%= f.text_field :name, class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500", required: true %>
        </div>
        
        <div class="mb-4">
          <%= f.label :description, "대회 설명", class: "block text-sm font-medium text-gray-700 mb-2" %>
          <%= f.text_area :description, rows: 4, class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500" %>
        </div>
        
        <div class="mb-4">
          <%= f.label :venue, "경기장", class: "block text-sm font-medium text-gray-700 mb-2" %>
          <%= f.text_field :venue, class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500", required: true %>
        </div>
      </div>
      
      <!-- 대회 이미지 -->
      <div class="bg-white shadow-md rounded-lg p-6">
        <h2 class="text-xl font-semibold mb-4">대회 이미지</h2>
        
        <!-- 현재 이미지 표시 -->
        <% if @tournament.images.attached? %>
          <div class="mb-4">
            <label class="block text-sm font-medium text-gray-700 mb-2">
              현재 이미지
            </label>
            <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-5 gap-4">
              <% @tournament.images.each_with_index do |image, index| %>
                <div class="relative group" id="existing-image-<%= image.id %>">
                  <div class="aspect-square rounded-lg overflow-hidden bg-gray-100">
                    <%= image_tag image.variant(resize_to_limit: [300, 300]), 
                                  class: "w-full h-full object-cover",
                                  alt: "Tournament image #{index + 1}" %>
                  </div>
                  <button type="button"
                          onclick="markImageForDeletion(<%= image.id %>)"
                          class="absolute top-1 right-1 bg-red-500 text-white rounded-full p-1 opacity-0 group-hover:opacity-100 transition-opacity">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                  </button>
                  <% if index == @tournament.main_image_position %>
                    <span class="absolute bottom-1 left-1 bg-blue-500 text-white text-xs px-2 py-1 rounded">대표</span>
                  <% end %>
                </div>
              <% end %>
            </div>
          </div>
        <% end %>
        
        <!-- 새 이미지 추가 -->
        <div class="mb-4">
          <label class="block text-sm font-medium text-gray-700 mb-2">
            이미지 추가 (최대 <%= 5 - (@tournament.images.count || 0) %>장)
          </label>
          
          <div class="space-y-4">
            <!-- 파일 선택 영역 -->
            <div class="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-gray-400 transition-colors">
              <%= f.file_field :images, 
                  multiple: true, 
                  accept: "image/*",
                  class: "hidden",
                  id: "tournament-images",
                  data: { 
                    action: "change->image-upload#handleFileSelect",
                    target: "image-upload.input"
                  } %>
              
              <label for="tournament-images" class="cursor-pointer">
                <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                  <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
                <p class="mt-2 text-sm text-gray-600">
                  <span class="font-medium text-blue-600 hover:underline">클릭하여 이미지 선택</span>
                  또는 드래그 앤 드롭
                </p>
                <p class="text-xs text-gray-500 mt-1">
                  JPG, PNG, GIF (최대 10MB)
                </p>
              </label>
            </div>
            
            <!-- 미리보기 영역 -->
            <div id="image-preview" class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-5 gap-4" data-target="image-upload.preview">
              <!-- 이미지 미리보기가 여기에 표시됩니다 -->
            </div>
          </div>
        </div>
      </div>
      
      <!-- 삭제할 이미지 ID들 저장 -->
      <div id="delete-image-fields">
        <!-- 삭제할 이미지 ID들이 여기에 추가됩니다 -->
      </div>
      
      <!-- 버튼 -->
      <div class="flex justify-end space-x-4">
        <%= link_to "취소", @tournament, class: "px-6 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50" %>
        <%= f.submit "수정하기", class: "px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 cursor-pointer" %>
      </div>
    <% end %>
  </div>
</div>

<script>
// 현재 이미지 수를 고려한 업로드 제한
let currentImageCount = <%= @tournament.images.count || 0 %>;
const maxImages = 5;
const deletedImageIds = new Set();

// 이미지 삭제 표시
function markImageForDeletion(imageId) {
  const imageDiv = document.getElementById(`existing-image-${imageId}`);
  const deleteFieldsContainer = document.getElementById('delete-image-fields');
  
  if (deletedImageIds.has(imageId)) {
    // 이미 삭제 표시된 경우, 취소
    deletedImageIds.delete(imageId);
    imageDiv.style.opacity = '1';
    imageDiv.querySelector('.absolute').style.display = 'none';
    
    // hidden input 제거
    const hiddenInput = document.getElementById(`delete-image-${imageId}`);
    if (hiddenInput) hiddenInput.remove();
    
    currentImageCount++;
  } else {
    // 삭제 표시
    deletedImageIds.add(imageId);
    imageDiv.style.opacity = '0.5';
    
    // 삭제 마크 추가
    let deleteMark = imageDiv.querySelector('.delete-mark');
    if (!deleteMark) {
      deleteMark = document.createElement('div');
      deleteMark.className = 'delete-mark absolute inset-0 bg-red-500 bg-opacity-50 flex items-center justify-center rounded-lg';
      deleteMark.innerHTML = '<span class="text-white text-2xl font-bold">삭제 예정</span>';
      imageDiv.appendChild(deleteMark);
    }
    deleteMark.style.display = 'flex';
    
    // hidden input 추가
    const hiddenInput = document.createElement('input');
    hiddenInput.type = 'hidden';
    hiddenInput.name = 'delete_image_ids[]';
    hiddenInput.value = imageId;
    hiddenInput.id = `delete-image-${imageId}`;
    deleteFieldsContainer.appendChild(hiddenInput);
    
    currentImageCount--;
  }
}

document.addEventListener('DOMContentLoaded', function() {
  const imageInput = document.getElementById('tournament-images');
  const previewContainer = document.getElementById('image-preview');
  
  if (!imageInput || !previewContainer) return;
  
  let selectedFiles = [];
  
  imageInput.addEventListener('change', function(e) {
    const files = Array.from(e.target.files);
    
    // 현재 이미지 + 새 이미지가 5장을 초과하는지 체크
    if (currentImageCount + selectedFiles.length + files.length > maxImages) {
      alert(`현재 ${currentImageCount}장의 이미지가 있습니다. 추가로 최대 ${maxImages - currentImageCount}장까지만 업로드할 수 있습니다.`);
      imageInput.value = '';
      return;
    }
    
    // 나머지 검증 로직은 기존 image_upload.js 사용
    <%= File.read(Rails.root.join('app/javascript/image_upload.js')).html_safe %>
  });
});
</script>