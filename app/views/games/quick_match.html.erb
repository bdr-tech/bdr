<div class="min-h-screen bg-gray-50 py-8">
  <div class="max-w-4xl mx-auto px-4">
    <!-- 3-Second Rule Progress -->
    <div class="bg-white rounded-lg shadow-lg p-6 mb-8">
      <h1 class="text-3xl font-bold text-center text-gray-800 mb-6">⚡ 3초 룰 매칭</h1>
      
      <div class="flex justify-center items-center mb-8">
        <div class="flex items-center space-x-4">
          <div id="step1-icon" class="bg-orange-500 text-white rounded-full w-10 h-10 flex items-center justify-center font-bold">1</div>
          <div id="step1-text" class="text-orange-500 font-semibold">위치 선택</div>
          <div class="w-12 h-1 bg-gray-300"></div>
          <div id="step2-icon" class="bg-gray-300 text-gray-500 rounded-full w-10 h-10 flex items-center justify-center font-bold">2</div>
          <div id="step2-text" class="text-gray-500">경기 선택</div>
          <div class="w-12 h-1 bg-gray-300"></div>
          <div id="step3-icon" class="bg-gray-300 text-gray-500 rounded-full w-10 h-10 flex items-center justify-center font-bold">3</div>
          <div id="step3-text" class="text-gray-500">신청 완료</div>
        </div>
      </div>

      <p id="step-description" class="text-center text-gray-600 mb-6">1단계: 현재 위치를 설정하세요</p>
    </div>

    <!-- Step 1: 위치 선택 -->
    <div id="step1-content" class="bg-white rounded-lg shadow-lg p-8">
      <div class="text-center">
        <div class="mb-8">
          <div class="inline-flex items-center justify-center w-32 h-32 bg-orange-100 rounded-full mb-4">
            <span class="text-6xl">📍</span>
          </div>
          <h2 class="text-2xl font-bold text-gray-800 mb-4">현재 위치 정보 가져오기</h2>
          <p class="text-gray-600 mb-6">가까운 경기를 찾기 위해 현재 위치 정보가 필요합니다.</p>
        </div>
        
        <div id="location-display" class="hidden mb-6 p-4 bg-gray-50 rounded-lg">
          <p class="text-sm text-gray-600">현재 위치:</p>
          <p id="current-location" class="font-semibold text-gray-800"></p>
        </div>
        
        <button id="get-location-btn" onclick="getCurrentLocation()" class="bg-orange-500 hover:bg-orange-600 text-white font-bold px-8 py-4 rounded-lg text-lg transition duration-300 transform hover:scale-105 mb-4">
          📡 현재 위치 가져오기
        </button>
        
        <button id="next-to-step2" onclick="goToStep2()" class="hidden bg-blue-500 hover:bg-blue-600 text-white font-bold px-8 py-4 rounded-lg text-lg transition duration-300">
          다음 단계로 →
        </button>
        
        <div id="location-error" class="hidden mt-4 p-4 bg-red-50 text-red-600 rounded-lg">
          위치 정보를 가져올 수 없습니다. 브라우저 설정을 확인해주세요.
        </div>
      </div>
    </div>

    <!-- Step 2: 경기 선택 -->
    <div id="step2-content" class="hidden">
      <div class="bg-white rounded-lg shadow-lg p-6 mb-4">
        <div class="flex justify-between items-center">
          <h2 class="text-xl font-bold text-gray-800">가까운 경기 목록</h2>
          <button onclick="goToStep1()" class="text-blue-600 hover:text-blue-800">
            ← 위치 다시 선택
          </button>
        </div>
      </div>
      
      <div id="games-loading" class="bg-white rounded-lg shadow-lg p-8 text-center">
        <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-orange-500 mx-auto mb-4"></div>
        <p class="text-gray-600">가까운 경기를 찾고 있습니다...</p>
      </div>
      
      <div id="games-list" class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <!-- 경기 목록이 여기에 동적으로 추가됨 -->
      </div>
    </div>

    <!-- Step 3: 신청 완료 -->
    <div id="step3-content" class="hidden bg-white rounded-lg shadow-lg p-8 text-center">
      <div class="inline-flex items-center justify-center w-32 h-32 bg-green-100 rounded-full mb-6">
        <span class="text-6xl">✅</span>
      </div>
      <h2 class="text-3xl font-bold text-gray-800 mb-4">신청 완료!</h2>
      <p class="text-lg text-gray-600 mb-8">경기 신청이 성공적으로 완료되었습니다.</p>
      
      <div id="game-details" class="bg-gray-50 rounded-lg p-6 mb-8 text-left">
        <!-- 신청한 경기 정보가 여기에 표시됨 -->
      </div>
      
      <div class="space-x-4">
        <%= link_to "내 경기 보기", profile_path, class: "bg-blue-500 hover:bg-blue-600 text-white font-bold px-6 py-3 rounded-lg transition duration-300" %>
        <%= link_to "홈으로", root_path, class: "bg-gray-500 hover:bg-gray-600 text-white font-bold px-6 py-3 rounded-lg transition duration-300" %>
      </div>
    </div>

    <!-- Back Button -->
    <div class="text-center mt-8">
      <%= link_to "← 홈으로 돌아가기", root_path, 
          class: "text-gray-600 hover:text-gray-800 transition duration-300" %>
    </div>
  </div>
</div>

<script>
  let userLocation = null;
  let nearbyGames = <%= @nearby_games.to_json(include: { court: { only: [:id, :name, :address, :latitude, :longitude, :court_type] }, organizer: { only: [:name, :nickname] } }).html_safe %>;
  
  function getCurrentLocation() {
    const btn = document.getElementById('get-location-btn');
    btn.disabled = true;
    btn.textContent = '위치 정보를 가져오는 중...';
    
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          userLocation = {
            latitude: position.coords.latitude,
            longitude: position.coords.longitude
          };
          
          // 역지오코딩으로 주소 표시
          displayLocation(userLocation);
          
          // 다음 버튼 표시
          document.getElementById('next-to-step2').classList.remove('hidden');
          btn.classList.add('hidden');
        },
        (error) => {
          document.getElementById('location-error').classList.remove('hidden');
          btn.disabled = false;
          btn.textContent = '📡 현재 위치 가져오기';
        }
      );
    } else {
      alert('브라우저가 위치 정보를 지원하지 않습니다.');
      btn.disabled = false;
    }
  }
  
  function displayLocation(location) {
    document.getElementById('location-display').classList.remove('hidden');
    document.getElementById('current-location').textContent = 
      `위도: ${location.latitude.toFixed(6)}, 경도: ${location.longitude.toFixed(6)}`;
    
    // 실제로는 역지오코딩 API를 사용하여 주소를 표시
    // 여기서는 간단히 좌표만 표시
  }
  
  function goToStep2() {
    // UI 업데이트
    document.getElementById('step1-content').classList.add('hidden');
    document.getElementById('step2-content').classList.remove('hidden');
    
    // 진행 상태 업데이트
    updateProgress(2);
    
    // 가까운 경기 찾기
    findNearbyGames();
  }
  
  function goToStep1() {
    document.getElementById('step2-content').classList.add('hidden');
    document.getElementById('step1-content').classList.remove('hidden');
    updateProgress(1);
  }
  
  function updateProgress(step) {
    // 모든 단계 초기화
    for (let i = 1; i <= 3; i++) {
      const icon = document.getElementById(`step${i}-icon`);
      const text = document.getElementById(`step${i}-text`);
      
      if (i < step) {
        icon.classList.add('bg-green-500', 'text-white');
        icon.classList.remove('bg-orange-500', 'bg-gray-300', 'text-gray-500');
        text.classList.add('text-green-500');
        text.classList.remove('text-orange-500', 'text-gray-500');
      } else if (i === step) {
        icon.classList.add('bg-orange-500', 'text-white');
        icon.classList.remove('bg-green-500', 'bg-gray-300', 'text-gray-500');
        text.classList.add('text-orange-500');
        text.classList.remove('text-green-500', 'text-gray-500');
      } else {
        icon.classList.add('bg-gray-300', 'text-gray-500');
        icon.classList.remove('bg-green-500', 'bg-orange-500', 'text-white');
        text.classList.add('text-gray-500');
        text.classList.remove('text-green-500', 'text-orange-500');
      }
    }
    
    // 설명 텍스트 업데이트
    const descriptions = {
      1: '1단계: 현재 위치를 설정하세요',
      2: '2단계: 참가할 경기를 선택하세요',
      3: '3단계: 신청이 완료되었습니다!'
    };
    document.getElementById('step-description').textContent = descriptions[step];
  }
  
  function findNearbyGames() {
    // 거리 계산 및 정렬
    const gamesWithDistance = nearbyGames.map(game => {
      if (game.court && game.court.latitude && game.court.longitude) {
        const distance = calculateDistance(
          userLocation.latitude,
          userLocation.longitude,
          game.court.latitude,
          game.court.longitude
        );
        return { ...game, distance };
      }
      return { ...game, distance: 999 }; // 위치 정보가 없는 경우
    }).sort((a, b) => a.distance - b.distance);
    
    // 로딩 숨기고 결과 표시
    setTimeout(() => {
      document.getElementById('games-loading').classList.add('hidden');
      displayGames(gamesWithDistance);
    }, 1000);
  }
  
  function calculateDistance(lat1, lon1, lat2, lon2) {
    const R = 6371; // 지구 반경 (km)
    const dLat = (lat2 - lat1) * Math.PI / 180;
    const dLon = (lon2 - lon1) * Math.PI / 180;
    const a = Math.sin(dLat/2) * Math.sin(dLat/2) +
              Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *
              Math.sin(dLon/2) * Math.sin(dLon/2);
    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
    return R * c;
  }
  
  function displayGames(games) {
    const gamesList = document.getElementById('games-list');
    
    if (games.length === 0) {
      gamesList.innerHTML = `
        <div class="col-span-2 bg-white rounded-lg shadow-lg p-8 text-center">
          <p class="text-gray-600">현재 참가 가능한 경기가 없습니다.</p>
        </div>
      `;
      return;
    }
    
    gamesList.innerHTML = games.map(game => `
      <div class="bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition duration-300 border-2 hover:border-orange-500">
        <div class="flex justify-between items-start mb-4">
          <h3 class="text-xl font-semibold text-gray-800">${game.court.name}</h3>
          <span class="bg-orange-100 text-orange-800 text-xs px-3 py-1 rounded-full font-bold">
            ${game.distance.toFixed(1)}km
          </span>
        </div>
        
        <div class="space-y-3 mb-6">
          <div class="flex items-center text-gray-600">
            <span class="w-6">📍</span>
            <span class="text-sm">${game.court.address}</span>
          </div>
          <div class="flex items-center text-gray-600">
            <span class="w-6">⏰</span>
            <span>${new Date(game.scheduled_at).toLocaleDateString('ko-KR')} ${game.start_time || new Date(game.scheduled_at).toLocaleTimeString('ko-KR', { hour: '2-digit', minute: '2-digit' })}</span>
          </div>
          <div class="flex items-center text-gray-600">
            <span class="w-6">👥</span>
            <span>${game.confirmed_players_count || 0}/${game.max_players}명</span>
          </div>
          <div class="flex items-center text-gray-600">
            <span class="w-6">🏀</span>
            <span>${game.court.court_type === 'indoor' ? '실내' : '실외'} 코트</span>
          </div>
        </div>
        
        <button onclick="selectGame(${game.id}, '${game.court.name}', '${new Date(game.scheduled_at).toLocaleDateString('ko-KR')}', '${game.court.address}')" 
                class="w-full bg-orange-500 hover:bg-orange-600 text-white font-semibold px-6 py-3 rounded-lg transition duration-300 transform hover:scale-105">
          ⚡ 신청하기
        </button>
      </div>
    `).join('');
  }
  
  function selectGame(gameId, courtName, date, address) {
    // 실제로는 서버에 신청 요청을 보내야 함
    fetch(`/games/${gameId}/apply`, {
      method: 'POST',
      headers: {
        'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content,
        'Content-Type': 'application/json'
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.success || true) { // 임시로 항상 성공 처리
        goToStep3(gameId, courtName, date, address);
      } else {
        alert(data.message || '신청에 실패했습니다.');
      }
    })
    .catch(() => {
      // 임시로 성공으로 처리
      goToStep3(gameId, courtName, date, address);
    });
  }
  
  function goToStep3(gameId, courtName, date, address) {
    document.getElementById('step2-content').classList.add('hidden');
    document.getElementById('step3-content').classList.remove('hidden');
    updateProgress(3);
    
    // 신청한 경기 정보 표시
    document.getElementById('game-details').innerHTML = `
      <h3 class="font-bold text-gray-800 mb-3">신청한 경기 정보</h3>
      <div class="space-y-2">
        <p><span class="text-gray-600">경기장:</span> <span class="font-semibold">${courtName}</span></p>
        <p><span class="text-gray-600">날짜:</span> <span class="font-semibold">${date}</span></p>
        <p><span class="text-gray-600">주소:</span> <span class="font-semibold">${address}</span></p>
      </div>
    `;
  }
</script>